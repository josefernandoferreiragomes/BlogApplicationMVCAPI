@model BlogApplication.WebSite.Models.AddProductViewModel
@{
    ViewBag.Title = "Products";
}

<main>
    <section class="row" aria-labelledby="aspnetTitle">
        <h1 id="title">Products</h1>
        <p class="lead">Create</p>
    </section>

    @using (Html.BeginForm(actionName: "Create", controllerName: "Product", method: FormMethod.Post))
    {
        <div class="container">
            <div class="row f-group">
                <div class="col-lg-2">
                    @Html.LabelFor(m => m.ProductItem.Description, new { @class = "form-text" })

                </div>
                <div class="col-lg-2">
                    @Html.TextBoxFor(m => m.ProductItem.Description, "", new { @class = "form-control", @id = "Description" })
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4">
                    @Html.ValidationMessageFor(m => m.ProductItem.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row f-group">
                <div class="col-lg-2">
                    @Html.LabelFor(m => m.ProductItem.Price, new { @class = "form-text" })
                </div>
                <div class="col-lg-2">
                    @Html.TextBoxFor(m => m.ProductItem.Price, "", new { @class = "form-control", @id = "Price" })
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4">
                    @Html.ValidationMessageFor(m => m.ProductItem.Price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row f-group">
                <div class="col-lg-2">
                    @Html.LabelFor(m => m.ProductItem.ProductDate, new { @class = "form-text" })
                </div>
                <div class="col-lg-2">
                    @Html.TextBoxFor(m => m.ProductItem.ProductDate, "", new { @class = "datepicker form-control", @id = "ProductDate" })
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4">
                    @Html.ValidationMessageFor(m => m.ProductItem.ProductDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row f-group">
                <div class="col-lg-2">
                    @Html.LabelFor(m => m.ProductItem.ProductTypeId, new { @class = "form-text" })
                </div>
                <div class="col-lg-2">
                    @Html.DropDownListFor(m => m.ProductItem.ProductTypeId, Model.ListOfProductTypes,"Select Product Type", new { @class = "form-control", @id = "ProductCategory" })
                </div>
            </div>
            <p></p>
            <div class="row">
                <div class="col-lg-4 text-danger">
                    @if (Model != null)
                    {@Model.ValidationMessage}
                </div>
            </div>
            <input type="submit" class="btn btn-primary" value="Submit" />
            <button id="btnSave">Submit Ajax</button>
        </div>
    }
</main>
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

@section scripts{
    
    <script src="~/Scripts/jquery-ui-1.13.2.js"></script>
    <script>

        $(function () {    
            $(".datepicker").datepicker({
                dateFormat: "dd-mm-yy",
                changemonth: true,
                changeyear: true
            });

            $("#btnSave").click(function () {
                //alert("");
                var productObj = {};
                productObj.description = $("#Description").val();
                productObj.price = $("#Price").val();
                productObj.productDate = $("#ProductDate").val();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action(actionName: "CreateAjax", controllerName: "Product")',
                    data: JSON.stringify(productObj),
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        alert("Data has been added successfully: " + data.model.ValidationMessage);                        
                    },
                    error: function (data) {
                        alert("Error while inserting data" + data.model.ValidationMessage);
                    }
                });
                return false;
            });
        });
    </script>

}